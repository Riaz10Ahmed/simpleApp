{"version":3,"sources":["./src/app/pages/todo/todo.page.html","./src/app/pages/todo/todo-routing.module.ts","./src/app/pages/todo/todo.module.ts","./src/app/pages/todo/todo.page.scss","./src/app/pages/todo/todo.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,grBAAinB,2BAA2B,MAAM,mRAAmR,E;;;;;;;;;;;;;;;;;;;ACA34B;AACc;AAEhB;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAMF,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;CAAG;AAAxB,qBAAqB;IAJjC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBO;AACM;AACF;AAEA;AAEiB;AAEvB;AAWvC,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAT1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,0EAAqB;SACtB;QACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;ACnB3B;AAAe,6GAA8C,2IAA2I,E;;;;;;;;;;;;;;;;;;ACAtJ;AACH;AAO/C,IAAa,QAAQ,GAArB,MAAa,QAAQ;IAGnB,YAAmB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;QAFzC,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAG,EAAE,CAAC;IAC+B,CAAC;IAE9C,QAAQ;IAER,CAAC;IACD,OAAO;QACL,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC5B,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;YACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;SACpB;IACH,CAAC;IACD,UAAU,CAAC,KAAK;QACd,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC;CAEF;;YAhB6B,4DAAa;;AAH9B,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,oNAA+B;;KAEhC,CAAC;GACW,QAAQ,CAmBpB;AAnBoB","file":"pages-todo-todo-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Todo\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-item>\\n    <ion-input type=\\\"text\\\" placeholder=\\\"Enter task\\\" [(ngModel)]=\\\"taskName\\\"></ion-input>\\n\\n    <div class=\\\"item-note\\\" item-end>\\n      <ion-button color=\\\"dark\\\" (click)=\\\"addTask()\\\">\\n        <ion-icon name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </div>\\n  </ion-item>\\n  <div padding>\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let todo of taskList; let i=index\\\">\\n        {{todo}}\\n        <div class=\\\"item-note\\\" slot=\\\"end\\\">\\n          <ion-button color=\\\"danger\\\" clear (click)=\\\"deleteTask(i)\\\">\\n            <ion-icon name=\\\"trash\\\"></ion-icon>\\n          </ion-button>\\n        </div>\\n      </ion-item>\\n    </ion-list>\\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TodoPage } from './todo.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TodoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TodoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TodoPageRoutingModule } from './todo-routing.module';\n\nimport { TodoPage } from './todo.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TodoPageRoutingModule\n  ],\n  declarations: [TodoPage]\n})\nexport class TodoPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3RvZG8vdG9kby5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.page.html',\n  styleUrls: ['./todo.page.scss'],\n})\nexport class TodoPage implements OnInit {\n  taskName: any = '';\n  taskList = [];\n  constructor(public navCtrl: NavController) { }\n\n  ngOnInit() {\n\n  }\n  addTask() {\n    if (this.taskName.length > 0) {\n      let task = this.taskName;\n      this.taskList.push(task);\n      this.taskName = '';\n    }\n  }\n  deleteTask(index) {\n    this.taskList.splice(index, 1);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}